   1               		.file	"DC_motor.c"
   2               		.arch atmega32
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  72               	.global	init_motor
  74               	init_motor:
   1:../../DC_motor.c **** /*
   2:../../DC_motor.c ****  Template for program header 
   3:../../DC_motor.c ****  
   4:../../DC_motor.c **** 
   5:../../DC_motor.c ****  Module 				:   Module name
   6:../../DC_motor.c ****  Description 			:   Module Description
   7:../../DC_motor.c ****  Original written for 	:   CPU/Microcontroller
   8:../../DC_motor.c ****  CPU port/tested		:   CPU/Microcontroller
   9:../../DC_motor.c ****  Hardware use			:   IC Chip
  10:../../DC_motor.c ****  Port use				:   Port name / Function
  11:../../DC_motor.c ****  Memory	FLASH			:   XXX
  12:../../DC_motor.c **** 		RAM				:   XXX
  13:../../DC_motor.c **** 		EEPROM			:   XXX
  14:../../DC_motor.c ****  Document				:   Document describe algorithm
  15:../../DC_motor.c ****  Written by 			:   Name / Email
  16:../../DC_motor.c ****  Date					:  DD/MM/20XX
  17:../../DC_motor.c ****   
  18:../../DC_motor.c ****  Update History
  19:../../DC_motor.c ****  
  20:../../DC_motor.c ****  Date			By 					Comments
  21:../../DC_motor.c ****  ----			--					---------
  22:../../DC_motor.c ****  
  23:../../DC_motor.c ****  */
  24:../../DC_motor.c ****  
  25:../../DC_motor.c **** #include "DC_motor.h" 
  26:../../DC_motor.c **** #include <avr/io.h>
  27:../../DC_motor.c **** 
  28:../../DC_motor.c **** /*
  29:../../DC_motor.c ****  Freq = Clk/1024 = 15.625 K If too high Motor cannot start
  30:../../DC_motor.c ****  PWM Mode 8 bits
  31:../../DC_motor.c **** */ 
  32:../../DC_motor.c **** void init_motor ()
  33:../../DC_motor.c **** {
  75               	ogue end (size=0) */
  77               	.LM1:
  78               		in r24,79-0x20
  34:../../DC_motor.c ****  // Initial for PWM Motor control for 16 timer for OC1A and OC1B
  35:../../DC_motor.c **** // 8 bit fast PWM set OC1A OC1B on comapare match
  36:../../DC_motor.c **** 
  37:../../DC_motor.c ****     TCCR1A |= _BV(WGM10) |_BV(WGM11) | _BV(COM1B1)|_BV(COM1A1);
  79               	_motor
  80               	.LM0:
  81 0000 8FB5      	/* prologue: frame size=0 */
  82 0002 836A      	/* prologue end (size=0) */
  38:../../DC_motor.c ****     TCCR1B |= _BV(WGM12) | _BV(CS12) | _BV(CS10);   // Clk /1024
  85               	.LM0:
  86 0006 8EB5      	/* prologue: frame size=0 */
  87 0008 8D60      	/* prologue end (size=0) */
  39:../../DC_motor.c **** 	OCR1A = 0x00FF;
  90               	.LM0:
  91 000c 8FEF      	/* prologue: frame size=0 */
  92 000e 90E0      	/* prologue end (size=0) */
  94 0012 8ABD      	.LM1:
  40:../../DC_motor.c **** 	OCR1B = 0x00FF;
  95               	68,0,33,.LM0-init_motor
  96               	.LM0:
  97 0014 99BD      	/* prologue: frame size=0 */
  98 0016 88BD      	/* prologue end (size=0) */
  41:../../DC_motor.c **** 
  42:../../DC_motor.c **** //    OCR1A = 0;
  43:../../DC_motor.c **** //	OCR1B = 0;
  44:../../DC_motor.c ****     MOTOR_DIRECTION_DIR  |= 	MOTORA_1 | MOTORA_2 | MOTORB_1 | MOTORB_2;
  99               	it_motor, @function
 100               	init_motor:
 102 001a 806F      	.LM0:
 103 001c 8ABB      	/* prologue: frame size=0 */
  45:../../DC_motor.c **** 	MOTOR_ENABLE12_DIR	 |= 	MOTOR_ENABLE12;
 104               	
 105               	.global	init_motor
  46:../../DC_motor.c **** 	MOTOR_ENABLE34_DIR	 |=  	MOTOR_ENABLE34;		
 107               	
 111 0022 0895      	.global	init_motor
 113               	init_motor:
 115               	.LM0:
 116               	/* prologue: frame size=0 */
 117               	/* prologue end (size=0) */
 119               	.LM1:
 120               		in r24,79-0x20
 121               		ori r24,lo8(-93)
  47:../../DC_motor.c ****   
  48:../../DC_motor.c **** }
  49:../../DC_motor.c **** 
  50:../../DC_motor.c **** 
  51:../../DC_motor.c **** // speed from 1 - 10
  52:../../DC_motor.c **** 
  53:../../DC_motor.c **** void  motor_control (uint8_t port, uint8_t direction) 
  54:../../DC_motor.c **** {
 122               	logue: frame size=0 */
 123               	/* prologue end (size=0) */
 125               	.LM1:
  55:../../DC_motor.c ****   
  56:../../DC_motor.c ****    uint8_t  controlA,controlB;
  57:../../DC_motor.c ****    
  58:../../DC_motor.c ****    switch (direction)
 126               	68,0,33,.LM0-init_motor
 127               	.LM0:
 128 0024 6230      	/* prologue: frame size=0 */
 129 0026 01F0      	/* prologue end (size=0) */
 131               	.LM1:
 132 0028 6330      		in r24,79-0x20
 133 002a 01F0      		ori r24,lo8(-93)
 134 002c 6130      		out 79-0x20,r24
 136 0030 00C0      	.LM2:
 137               		in r24,78-0x20
 138 0032 2FEF      		ori r24,lo8(13)
 139 0034 00C0      		out 78-0x20,r24
 141 0036 20E0      	.LM3:
 142 0038 00C0      		ldi r24,lo8(255)
 143               		ldi r25,hi8(255)
 144 003a 20E0      		out (74)+1-0x20,r25
 145               		out 74-0x20,r24
 147 003e 00C0      	.LM4:
 148               		out (72)+1-0x20,r25
  59:../../DC_motor.c ****    {
  60:../../DC_motor.c ****      case MOTOR_FORWARD:
  61:../../DC_motor.c **** 	    controlA = 0;
  62:../../DC_motor.c **** 		controlB = 0xFF;
  63:../../DC_motor.c **** 		break;
 149               	5,hi8(255)
 150               		out (74)+1-0x20,r25
 151 0040 2FEF      		out 74-0x20,r24
 153 0042 90E0      	.LM4:
 154               		out (72)+1-0x20,r25
  64:../../DC_motor.c **** 	 case MOTOR_BACKWARD:
  65:../../DC_motor.c ****         controlA = 0xFF;
  66:../../DC_motor.c **** 		controlB = 0;
  67:../../DC_motor.c **** 		break;
  68:../../DC_motor.c **** 	 case MOTOR_STOP:
  69:../../DC_motor.c **** 	    controlA = 0;
  70:../../DC_motor.c **** 		controlB = 0;
  71:../../DC_motor.c **** 		break;
  72:../../DC_motor.c **** 	case MOTOR_BRAKE:
  73:../../DC_motor.c **** 	    controlA = 0xFF;
  74:../../DC_motor.c **** 		controlB = 0xFF;
  75:../../DC_motor.c **** 		break;
  76:../../DC_motor.c **** 	default:
  77:../../DC_motor.c **** 	    controlA = 0;
  78:../../DC_motor.c **** 		controlB = 0;
  79:../../DC_motor.c ****    }
  80:../../DC_motor.c ****  if (port == 1)
 155               	5,hi8(255)
 156               		out (74)+1-0x20,r25
 157 0044 8130      		out 74-0x20,r24
  81:../../DC_motor.c ****    {
  82:../../DC_motor.c **** //      MOTOR_ENABLE12_CONTROL  |= MOTOR_ENABLE12;
  83:../../DC_motor.c **** 	  MOTOR_DIRECTION_CONTROL &= ~(MOTORA_1 | MOTORA_2); 
 159               	M3:
 160               		ldi r24,lo8(255)
 161 0048 8BB3      		ldi r25,hi8(255)
 162 004a 8F7C      		out (74)+1-0x20,r25
 163 004c 8BBB      		out 74-0x20,r24
  84:../../DC_motor.c **** 	  MOTOR_DIRECTION_CONTROL |= ((MOTORA_1 & controlA ) | (MOTORA_2 & controlB));
 165               	.LM3:
 166 004e 8BB3      		ldi r24,lo8(255)
 167 0050 9072      		ldi r25,hi8(255)
 168 0052 2071      		out (74)+1-0x20,r25
 169 0054 282B      		out 74-0x20,r24
 171 0058 9BBB      	.LM4:
 172 005a 0895      		out (72)+1-0x20,r25
 173               		out 72-0x20,r24
  85:../../DC_motor.c ****   }
  86:../../DC_motor.c ****   if (port == 2)
 174               	4)+1-0x20,r25
 175               		out 74-0x20,r24
 177 005e 01F4      	.LM4:
  87:../../DC_motor.c ****    {
  88:../../DC_motor.c **** // 	  MOTOR_ENABLE34_CONTROL  |= MOTOR_ENABLE34;
  89:../../DC_motor.c **** 	  MOTOR_DIRECTION_CONTROL &= ~(MOTORB_1 | MOTORB_2); 
 178               	i r24,lo8(255)
 179               		ldi r25,hi8(255)
 180 0060 8BB3      		out (74)+1-0x20,r25
 181 0062 8F73      		out 74-0x20,r24
  90:../../DC_motor.c ****   	  MOTOR_DIRECTION_CONTROL |= ((MOTORB_1 & controlA ) | (MOTORB_2 & controlB));
 183               	M3:
 184               		ldi r24,lo8(255)
 185 0066 8BB3      		ldi r25,hi8(255)
 186 0068 9078      		out (74)+1-0x20,r25
 187 006a 2074      		out 74-0x20,r24
 189 006e 922B      	.LM4:
 190 0070 9BBB      		out (72)+1-0x20,r25
 191               		out 72-0x20,r24
 193               	.LM5:
 194               		in r24,58-0x20
 195               		ori r24,lo8(-16)
 196               		out 58-0x20,r24
 198               	.LM6:
 199               		sbi 49-0x20,5
 201               	.LM7:
 202               		sbi 49-0x20,4
 203               	/* epilogue: frame size=0 */
 204               		ret
 205               	/* epilogue end (size=1) */
DEFINED SYMBOLS
                            *ABS*:00000000 DC_motor.c
C:\DOCUME~1\tos\LOCALS~1\Temp/ccfC6rUP.s:3      *ABS*:0000003f __SREG__
C:\DOCUME~1\tos\LOCALS~1\Temp/ccfC6rUP.s:4      *ABS*:0000003e __SP_H__
C:\DOCUME~1\tos\LOCALS~1\Temp/ccfC6rUP.s:5      *ABS*:0000003d __SP_L__
C:\DOCUME~1\tos\LOCALS~1\Temp/ccfC6rUP.s:6      *ABS*:00000000 __tmp_reg__
C:\DOCUME~1\tos\LOCALS~1\Temp/ccfC6rUP.s:7      *ABS*:00000001 __zero_reg__
C:\DOCUME~1\tos\LOCALS~1\Temp/ccfC6rUP.s:74     .text:00000000 init_motor
C:\DOCUME~1\tos\LOCALS~1\Temp/ccfC6rUP.s:121    .text:00000024 motor_control

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
