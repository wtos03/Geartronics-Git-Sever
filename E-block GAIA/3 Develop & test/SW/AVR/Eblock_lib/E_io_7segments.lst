   1               		.file	"E_io_7segments.c"
   2               		.arch atmega32
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  85               	.global	font
  86               		.section	.progmem.data,"a",@progbits
  89               	font:
  90 0000 00        		.byte	0
  91 0001 82        		.byte	-126
  92 0002 22        		.byte	34
  93 0003 36        		.byte	54
  94 0004 65        		.byte	101
  95 0005 24        		.byte	36
  96 0006 52        		.byte	82
  97 0007 02        		.byte	2
  98 0008 39        		.byte	57
  99 0009 0F        		.byte	15
 100 000a 63        		.byte	99
 101 000b 46        		.byte	70
 102 000c 02        		.byte	2
 103 000d 40        		.byte	64
 104 000e 80        		.byte	-128
 105 000f 52        		.byte	82
 106 0010 3F        		.byte	63
 107 0011 06        		.byte	6
 108 0012 5B        		.byte	91
 109 0013 4F        		.byte	79
 110 0014 66        		.byte	102
 111 0015 6D        		.byte	109
 112 0016 7D        		.byte	125
 113 0017 07        		.byte	7
 114 0018 7F        		.byte	127
 115 0019 6F        		.byte	111
 116 001a 48        		.byte	72
 117 001b 18        		.byte	24
 118 001c 63        		.byte	99
 119 001d 48        		.byte	72
 120 001e 43        		.byte	67
 121 001f 53        		.byte	83
 122 0020 5F        		.byte	95
 123 0021 77        		.byte	119
 124 0022 7C        		.byte	124
 125 0023 39        		.byte	57
 126 0024 5E        		.byte	94
 127 0025 79        		.byte	121
 128 0026 71        		.byte	113
 129 0027 3D        		.byte	61
 130 0028 76        		.byte	118
 131 0029 06        		.byte	6
 132 002a 1E        		.byte	30
 133 002b F2        		.byte	-14
 134 002c 38        		.byte	56
 135 002d 55        		.byte	85
 136 002e 54        		.byte	84
 137 002f 3F        		.byte	63
 138 0030 73        		.byte	115
 139 0031 67        		.byte	103
 140 0032 31        		.byte	49
 141 0033 6D        		.byte	109
 142 0034 78        		.byte	120
 143 0035 3E        		.byte	62
 144 0036 1C        		.byte	28
 145 0037 6A        		.byte	106
 146 0038 49        		.byte	73
 147 0039 6E        		.byte	110
 148 003a 52        		.byte	82
 149 003b 39        		.byte	57
 150 003c 24        		.byte	36
 151 003d 0F        		.byte	15
 152 003e 23        		.byte	35
 153 003f 08        		.byte	8
 154 0040 20        		.byte	32
 155               	.global	g_display_str
 156               		.data
 159               	g_display_str:
 160 0000 3000      		.string	"0"
 161 0002 0000 0000 		.skip 23,0
 161      0000 0000 
 161      0000 0000 
 161      0000 0000 
 161      0000 0000 
 162               		.text
 164               	.global	io_7segments_init
 166               	io_7segments_init:
   1:../../Eblock_lib/E_io_7segments.c **** /*!  
   2:../../Eblock_lib/E_io_7segments.c **** 	\file   	E_io_7segments.c
   3:../../Eblock_lib/E_io_7segments.c **** 	\brief  	Library module for 7 Segments 
   4:../../Eblock_lib/E_io_7segments.c **** 	\ingroup	E_io_7segments  ( Name refer in *.h  group)
   5:../../Eblock_lib/E_io_7segments.c **** 	\par  Module description
   6:../../Eblock_lib/E_io_7segments.c ****     \n	Driver for  two of 7 Segments on E_IO Module. 
   7:../../Eblock_lib/E_io_7segments.c **** 	\n	Show output to 7 Segments both for characters and text mode.
   8:../../Eblock_lib/E_io_7segments.c **** 	\n	Including scroll text for long message. 	
   9:../../Eblock_lib/E_io_7segments.c **** 	\n Original written for 	:   \b AVR
  10:../../Eblock_lib/E_io_7segments.c ****  	\n CPU port/tested		:   ATMEGA32
  11:../../Eblock_lib/E_io_7segments.c ****  	\n Hardware use			:   E_IO
  12:../../Eblock_lib/E_io_7segments.c ****  	\n Port use				:   E_PA0 - E_PA7, E_PB1, E_PB2
  13:../../Eblock_lib/E_io_7segments.c ****  	\n Memory	FLASH		:   XXX
  14:../../Eblock_lib/E_io_7segments.c ****  	\n		RAM				:   XXX
  15:../../Eblock_lib/E_io_7segments.c ****  	\n		EEPROM			:   XXX
  16:../../Eblock_lib/E_io_7segments.c ****  	\n Reference Document	:   Document describe algorithm
  17:../../Eblock_lib/E_io_7segments.c **** 
  18:../../Eblock_lib/E_io_7segments.c **** 	\version 0.1
  19:../../Eblock_lib/E_io_7segments.c ****  	\author  wichai@geartronics.net
  20:../../Eblock_lib/E_io_7segments.c **** 	\date 	 12/08/08 
  21:../../Eblock_lib/E_io_7segments.c **** 
  22:../../Eblock_lib/E_io_7segments.c **** 	\par Update History
  23:../../Eblock_lib/E_io_7segments.c ****  	\nDate			By 					Comments
  24:../../Eblock_lib/E_io_7segments.c ****  	\n----			--					--------
  25:../../Eblock_lib/E_io_7segments.c **** 	\n 
  26:../../Eblock_lib/E_io_7segments.c ****  
  27:../../Eblock_lib/E_io_7segments.c **** */
  28:../../Eblock_lib/E_io_7segments.c **** 
  29:../../Eblock_lib/E_io_7segments.c **** 
  30:../../Eblock_lib/E_io_7segments.c **** 
  31:../../Eblock_lib/E_io_7segments.c **** 
  32:../../Eblock_lib/E_io_7segments.c **** 
  33:../../Eblock_lib/E_io_7segments.c **** 
  34:../../Eblock_lib/E_io_7segments.c **** //Include file
  35:../../Eblock_lib/E_io_7segments.c **** 
  36:../../Eblock_lib/E_io_7segments.c **** 
  37:../../Eblock_lib/E_io_7segments.c **** #include <avr/pgmspace.h>
  38:../../Eblock_lib/E_io_7segments.c **** #include "E_io_7segments.h"
  39:../../Eblock_lib/E_io_7segments.c **** #include "avr_timer.h"
  40:../../Eblock_lib/E_io_7segments.c **** 
  41:../../Eblock_lib/E_io_7segments.c **** 
  42:../../Eblock_lib/E_io_7segments.c **** //! String buffer to display
  43:../../Eblock_lib/E_io_7segments.c **** uint8_t g_display_str[MAX_STR] = {"0"};  // Need to initialize
  44:../../Eblock_lib/E_io_7segments.c **** //!  Length of string in buffer 
  45:../../Eblock_lib/E_io_7segments.c **** uint8_t g_display_length;
  46:../../Eblock_lib/E_io_7segments.c **** 
  47:../../Eblock_lib/E_io_7segments.c **** //! Pointer to start of display buffer
  48:../../Eblock_lib/E_io_7segments.c **** uint8_t g_start_ptr;   
  49:../../Eblock_lib/E_io_7segments.c **** //! Flag there is display buffer change
  50:../../Eblock_lib/E_io_7segments.c **** uint8_t g_display_change;    
  51:../../Eblock_lib/E_io_7segments.c **** 
  52:../../Eblock_lib/E_io_7segments.c **** 
  53:../../Eblock_lib/E_io_7segments.c **** 
  54:../../Eblock_lib/E_io_7segments.c **** //! Fonts save to show on 7 Segments 
  55:../../Eblock_lib/E_io_7segments.c **** 
  56:../../Eblock_lib/E_io_7segments.c **** const char font[FONT_NUM]  PROGMEM =  {
  57:../../Eblock_lib/E_io_7segments.c **** //  From SPACE 0x32  to ` 0x60
  58:../../Eblock_lib/E_io_7segments.c ****  0x00,0x82,0x22,0x36,0x65,0x24,0x52,0x02, //32 - 39
  59:../../Eblock_lib/E_io_7segments.c ****  0x39,0x0F,0x63,0x46,0x02,0x40,0x80,0x52, //40 - 47
  60:../../Eblock_lib/E_io_7segments.c ****  0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07, //48 - 55
  61:../../Eblock_lib/E_io_7segments.c ****  0x7F,0x6F,0x48,0x18,0x63,0x48,0x43,0x53, //56 - 63
  62:../../Eblock_lib/E_io_7segments.c ****  0x5F,0x77,0x7C,0x39,0x5e,0x79,0x71,0x3d, //64 - 71
  63:../../Eblock_lib/E_io_7segments.c ****  0x76,0x06,0x1e,0xf2,0x38,0x55,0x54,0x3f, //72 - 79
  64:../../Eblock_lib/E_io_7segments.c ****  0x73,0x67,0x31,0x6d,0x78,0x3e,0x1c,0x6a, //80 - 87
  65:../../Eblock_lib/E_io_7segments.c ****  0x49,0x6e,0x52,0x39,0x24,0x0f,0x23,0x08, //88 - 95
  66:../../Eblock_lib/E_io_7segments.c ****  0x20};
  67:../../Eblock_lib/E_io_7segments.c **** 
  68:../../Eblock_lib/E_io_7segments.c **** // Start routine here
  69:../../Eblock_lib/E_io_7segments.c **** 
  70:../../Eblock_lib/E_io_7segments.c ****  
  71:../../Eblock_lib/E_io_7segments.c **** 
  72:../../Eblock_lib/E_io_7segments.c **** 
  73:../../Eblock_lib/E_io_7segments.c **** 
  74:../../Eblock_lib/E_io_7segments.c **** /*!	\brief  Init  7 segments module  for output port and initial timer for refresh rate 
  75:../../Eblock_lib/E_io_7segments.c **** 	\n      ( Use the same timer for io_sw module)
  76:../../Eblock_lib/E_io_7segments.c **** 	\param  None  
  77:../../Eblock_lib/E_io_7segments.c **** 	\return None
  78:../../Eblock_lib/E_io_7segments.c **** 	\par Port/Periheral Usage 
  79:../../Eblock_lib/E_io_7segments.c **** 	\n   E_PA0 - E_PA7, E_PB1, E_PB2
  80:../../Eblock_lib/E_io_7segments.c **** 	\par Theory of Operation   
  81:../../Eblock_lib/E_io_7segments.c **** 	\n   Each I/O pins need to set direction for use as input or output
  82:../../Eblock_lib/E_io_7segments.c **** 	\par Pseudo code
  83:../../Eblock_lib/E_io_7segments.c **** 	\n   Initial all usage GPIO to output direction
  84:../../Eblock_lib/E_io_7segments.c **** 	\n 	 Initial display length to show on 7 Segments = 1 
  85:../../Eblock_lib/E_io_7segments.c **** 	\note    
  86:../../Eblock_lib/E_io_7segments.c **** 	\n  
  87:../../Eblock_lib/E_io_7segments.c **** 	\bug    <bug to fix>
  88:../../Eblock_lib/E_io_7segments.c **** 
  89:../../Eblock_lib/E_io_7segments.c **** 	\author wichai tossamartvorakul  wichi@geartronics.net
  90:../../Eblock_lib/E_io_7segments.c **** 	\sa	 <see also two name joined by ::>
  91:../../Eblock_lib/E_io_7segments.c **** */     
  92:../../Eblock_lib/E_io_7segments.c **** void io_7segments_init ( void) 
  93:../../Eblock_lib/E_io_7segments.c **** {
 168               	.LM1:
 169               	/* prologue: frame size=0 */
 170               	/* prologue end (size=0) */
  94:../../Eblock_lib/E_io_7segments.c **** 
  95:../../Eblock_lib/E_io_7segments.c **** // Set output for E_PA0 - E_PA7, E_PB0, E_PB2
  96:../../Eblock_lib/E_io_7segments.c ****     E_DIR_PA0(OUTPUT);
 172               	.LM2:
 173 0000 B89A      		sbi 55-0x20,0
  97:../../Eblock_lib/E_io_7segments.c **** 	E_DIR_PA1(OUTPUT);
 175               	.LM3:
 176 0002 B99A      		sbi 55-0x20,1
  98:../../Eblock_lib/E_io_7segments.c **** 	E_DIR_PA2(OUTPUT);
 178               	.LM4:
 179 0004 BA9A      		sbi 55-0x20,2
  99:../../Eblock_lib/E_io_7segments.c **** 	E_DIR_PA3(OUTPUT);
 181               	.LM5:
 182 0006 BB9A      		sbi 55-0x20,3
 100:../../Eblock_lib/E_io_7segments.c **** 	E_DIR_PA4(OUTPUT);
 184               	.LM6:
 185 0008 BC9A      		sbi 55-0x20,4
 101:../../Eblock_lib/E_io_7segments.c **** 	E_DIR_PA5(OUTPUT);
 187               	.LM7:
 188 000a BD9A      		sbi 55-0x20,5
 102:../../Eblock_lib/E_io_7segments.c **** 	E_DIR_PA6(OUTPUT);
 190               	.LM8:
 191 000c BE9A      		sbi 55-0x20,6
 103:../../Eblock_lib/E_io_7segments.c **** 	E_DIR_PA7(OUTPUT);
 193               	.LM9:
 194 000e BF9A      		sbi 55-0x20,7
 104:../../Eblock_lib/E_io_7segments.c **** 	E_DIR_PB1(OUTPUT);
 196               	.LM10:
 197 0010 A39A      		sbi 52-0x20,3
 105:../../Eblock_lib/E_io_7segments.c **** 	E_DIR_PB2(OUTPUT);
 199               	.LM11:
 200 0012 A49A      		sbi 52-0x20,4
 106:../../Eblock_lib/E_io_7segments.c ****  	
 107:../../Eblock_lib/E_io_7segments.c **** // Timer initialize
 108:../../Eblock_lib/E_io_7segments.c ****    timer_tick (100);    // Set timer tick for display update
 202               	.LM12:
 203 0014 84E6      		ldi r24,lo8(100)
 204 0016 0E94 0000 		call timer_tick
 109:../../Eblock_lib/E_io_7segments.c **** 	
 110:../../Eblock_lib/E_io_7segments.c **** 	g_display_length = 1 ;
 206               	.LM13:
 207 001a 81E0      		ldi r24,lo8(1)
 208 001c 8093 0000 		sts g_display_length,r24
 111:../../Eblock_lib/E_io_7segments.c ****   	g_start_ptr  = 0;
 210               	.LM14:
 211 0020 1092 0000 		sts g_start_ptr,__zero_reg__
 112:../../Eblock_lib/E_io_7segments.c **** 	g_display_change = 0;
 213               	.LM15:
 214 0024 1092 0000 		sts g_display_change,__zero_reg__
 215               	/* epilogue: frame size=0 */
 216 0028 0895      		ret
 217               	/* epilogue end (size=1) */
 218               	/* function io_7segments_init size 21 (20) */
 220               	.Lscope0:
 224               	.global	io_7Segments_num
 226               	io_7Segments_num:
 113:../../Eblock_lib/E_io_7segments.c **** 	
 114:../../Eblock_lib/E_io_7segments.c **** 		 
 115:../../Eblock_lib/E_io_7segments.c **** }
 116:../../Eblock_lib/E_io_7segments.c **** 
 117:../../Eblock_lib/E_io_7segments.c **** 
 118:../../Eblock_lib/E_io_7segments.c **** /*!	\brief  Init  7 segments module  for output port and initial timer for refresh rate 
 119:../../Eblock_lib/E_io_7segments.c **** 	\n      ( Use the same timer for io_sw module)
 120:../../Eblock_lib/E_io_7segments.c **** 	\param  None  
 121:../../Eblock_lib/E_io_7segments.c **** 	\return None
 122:../../Eblock_lib/E_io_7segments.c **** 	\par Port/Periheral Usage 
 123:../../Eblock_lib/E_io_7segments.c **** 	\n   E_PB0,E_PB3
 124:../../Eblock_lib/E_io_7segments.c **** 	\par Theory of Operation   
 125:../../Eblock_lib/E_io_7segments.c **** 	\n
 126:../../Eblock_lib/E_io_7segments.c **** 	\par Psudo code
 127:../../Eblock_lib/E_io_7segments.c **** 	\n
 128:../../Eblock_lib/E_io_7segments.c **** 	\note   (Pseudo code)
 129:../../Eblock_lib/E_io_7segments.c **** 	\bug    <bug to fix>
 130:../../Eblock_lib/E_io_7segments.c **** 
 131:../../Eblock_lib/E_io_7segments.c **** 	\author wichai tossamartvorakul  wichi@geartronics.net
 132:../../Eblock_lib/E_io_7segments.c **** 	\sa	 <see also two name joined by ::>
 133:../../Eblock_lib/E_io_7segments.c **** */     
 134:../../Eblock_lib/E_io_7segments.c **** 
 135:../../Eblock_lib/E_io_7segments.c **** void io_7Segments_num (float  number, int decimal_point) 
 136:../../Eblock_lib/E_io_7segments.c **** {
 228               	.LM16:
 229               	/* prologue: frame size=0 */
 230               	/* prologue end (size=0) */
 231               	/* epilogue: frame size=0 */
 232 002a 0895      		ret
 233               	/* epilogue end (size=1) */
 234               	/* function io_7Segments_num size 1 (0) */
 236               	.Lscope1:
 239               	.global	io_7segments_write
 241               	io_7segments_write:
 137:../../Eblock_lib/E_io_7segments.c ****  
 138:../../Eblock_lib/E_io_7segments.c **** // Convert float to string
 139:../../Eblock_lib/E_io_7segments.c **** 	
 140:../../Eblock_lib/E_io_7segments.c **** }
 141:../../Eblock_lib/E_io_7segments.c **** 
 142:../../Eblock_lib/E_io_7segments.c **** 
 143:../../Eblock_lib/E_io_7segments.c **** /*!	\brief  Copy display string to display buffer 
 144:../../Eblock_lib/E_io_7segments.c **** 	\param  str 	Input Pointer to display string  
 145:../../Eblock_lib/E_io_7segments.c **** 	\n		 
 146:../../Eblock_lib/E_io_7segments.c **** 	\return None
 147:../../Eblock_lib/E_io_7segments.c **** 	\par Port/Periheral Usage 
 148:../../Eblock_lib/E_io_7segments.c **** 	\n    
 149:../../Eblock_lib/E_io_7segments.c **** 	\par Theory of Operation   
 150:../../Eblock_lib/E_io_7segments.c **** 	\n   Copy display string from external  to internal display buffer for 7 Segments 
 151:../../Eblock_lib/E_io_7segments.c **** 	\n   This routine will convert all lower case to uppercase and set characters which is not 
 152:../../Eblock_lib/E_io_7segments.c **** 	\n   in range 32 - END_SUPPORT_ASCII (96) to  SPACE characters   
 153:../../Eblock_lib/E_io_7segments.c **** 	\par Pseudo code
 154:../../Eblock_lib/E_io_7segments.c **** 	\n 		Copy from external string to internal display buffer until NULL Character found
 155:../../Eblock_lib/E_io_7segments.c **** 	\n         If lower case convert to uppercase
 156:../../Eblock_lib/E_io_7segments.c **** 	\n		   If out of support range map to BLANK
 157:../../Eblock_lib/E_io_7segments.c **** 	\n		   save the length of string to display_length
 158:../../Eblock_lib/E_io_7segments.c **** 	\n
 159:../../Eblock_lib/E_io_7segments.c **** 	\note   Display buffer set at constant  MAX_STR = 25  
 160:../../Eblock_lib/E_io_7segments.c **** 	\bug    If characters more than 128 will get font index overflow.
 161:../../Eblock_lib/E_io_7segments.c **** 
 162:../../Eblock_lib/E_io_7segments.c **** 	\author wichai tossamartvorakul  wichi@geartronics.net
 163:../../Eblock_lib/E_io_7segments.c **** 	\sa	 <see also two name joined by ::>
 164:../../Eblock_lib/E_io_7segments.c **** */     
 165:../../Eblock_lib/E_io_7segments.c **** void io_7segments_write (uint8_t *str)  	
 166:../../Eblock_lib/E_io_7segments.c **** {
 243               	.LM17:
 244               	/* prologue: frame size=0 */
 245 002c CF93      		push r28
 246 002e DF93      		push r29
 247               	/* prologue end (size=2) */
 248 0030 EC01      		movw r28,r24
 167:../../Eblock_lib/E_io_7segments.c ****    uint8_t i = 0;
 250               	.LM18:
 251 0032 90E0      		ldi r25,lo8(0)
 168:../../Eblock_lib/E_io_7segments.c ****    int8_t ch;
 169:../../Eblock_lib/E_io_7segments.c ****    g_display_length = 0;
 253               	.LM19:
 254 0034 9093 0000 		sts g_display_length,r25
 170:../../Eblock_lib/E_io_7segments.c ****    while ( *(str+i))
 171:../../Eblock_lib/E_io_7segments.c ****    {  
 172:../../Eblock_lib/E_io_7segments.c ****         ch =  *(str+i);
 173:../../Eblock_lib/E_io_7segments.c **** 		if  (ch > END_SUPPORT_ASCII)    // Over support fonts limit
 174:../../Eblock_lib/E_io_7segments.c **** 			ch -= FONT_OFFSET;			// Convert to small cap
 175:../../Eblock_lib/E_io_7segments.c **** 		ch -= FONT_OFFSET;				// Convert to font index
 176:../../Eblock_lib/E_io_7segments.c **** 		if (ch < 0)					    //  < 0 ASCII map to NULL (Show blank)
 177:../../Eblock_lib/E_io_7segments.c **** 		    ch = 0;
 178:../../Eblock_lib/E_io_7segments.c **** 		g_display_str[i] = ch;
 179:../../Eblock_lib/E_io_7segments.c **** 		i++;
 256               	.LM20:
 257 0038 8881      		ld r24,Y
 258               	.L11:
 260               	.LM21:
 261 003a 8823      		tst r24
 262 003c A9F0      		breq .L10
 264               	.LM22:
 265 003e A92F      		mov r26,r25
 266 0040 BB27      		clr r27
 267 0042 FD01      		movw r30,r26
 268 0044 EC0F      		add r30,r28
 269 0046 FD1F      		adc r31,r29
 270 0048 E081      		ld r30,Z
 272               	.LM23:
 273 004a E136      		cpi r30,lo8(97)
 274 004c 0CF0      		brlt .L6
 276               	.LM24:
 277 004e E052      		subi r30,lo8(-(-32))
 278               	.L6:
 280               	.LM25:
 281 0050 E052      		subi r30,lo8(-(-32))
 283               	.LM26:
 284 0052 E7FD      		sbrc r30,7
 286               	.LM27:
 287 0054 E0E0      		ldi r30,lo8(0)
 288               	.L7:
 290               	.LM28:
 291 0056 A050      		subi r26,lo8(-(g_display_str))
 292 0058 B040      		sbci r27,hi8(-(g_display_str))
 293 005a EC93      		st X,r30
 295               	.LM29:
 296 005c 9F5F      		subi r25,lo8(-(1))
 297 005e FE01      		movw r30,r28
 298 0060 E90F      		add r30,r25
 299 0062 F11D      		adc r31,__zero_reg__
 300 0064 8081      		ld r24,Z
 301 0066 E9CF      		rjmp .L11
 302               	.L10:
 180:../../Eblock_lib/E_io_7segments.c ****    };
 181:../../Eblock_lib/E_io_7segments.c ****    g_display_length = i;                  // Length of char
 304               	.LM30:
 305 0068 9093 0000 		sts g_display_length,r25
 182:../../Eblock_lib/E_io_7segments.c ****    g_display_str[i] = 0; 				  // NULL Characters end of string
 307               	.LM31:
 308 006c E92F      		mov r30,r25
 309 006e FF27      		clr r31
 310 0070 E050      		subi r30,lo8(-(g_display_str))
 311 0072 F040      		sbci r31,hi8(-(g_display_str))
 312 0074 1082      		st Z,__zero_reg__
 183:../../Eblock_lib/E_io_7segments.c ****    g_start_ptr = 0;
 314               	.LM32:
 315 0076 1092 0000 		sts g_start_ptr,__zero_reg__
 184:../../Eblock_lib/E_io_7segments.c ****    g_display_change = 1;				 // Display buffer change refresh display
 317               	.LM33:
 318 007a 81E0      		ldi r24,lo8(1)
 319 007c 8093 0000 		sts g_display_change,r24
 320               	/* epilogue: frame size=0 */
 321 0080 DF91      		pop r29
 322 0082 CF91      		pop r28
 323 0084 0895      		ret
 324               	/* epilogue end (size=3) */
 325               	/* function io_7segments_write size 46 (41) */
 331               	.Lscope2:
 332               		.lcomm fontmap.0,2
 333               		.lcomm time_shift.1,2
 334               		.lcomm toggle.2,1
 336               	.global	io_7segments_update
 338               	io_7segments_update:
 185:../../Eblock_lib/E_io_7segments.c **** }
 186:../../Eblock_lib/E_io_7segments.c **** 
 187:../../Eblock_lib/E_io_7segments.c **** 
 188:../../Eblock_lib/E_io_7segments.c **** /*!	\brief  Update 7 Segments modules display 
 189:../../Eblock_lib/E_io_7segments.c **** 	\param  
 190:../../Eblock_lib/E_io_7segments.c **** 	\n	Global  display_str 		- String to display
 191:../../Eblock_lib/E_io_7segments.c **** 	\n								  (String of characters which already map to range 32 - 65)
 192:../../Eblock_lib/E_io_7segments.c **** 	\n			display_length		- String length
 193:../../Eblock_lib/E_io_7segments.c **** 	\return None
 194:../../Eblock_lib/E_io_7segments.c **** 	\par Port/Periheral Usage 
 195:../../Eblock_lib/E_io_7segments.c **** 	\n   E_PA0 - E_PA7, E_PB1, E_PB2
 196:../../Eblock_lib/E_io_7segments.c **** 	\par Theory of Operation   
 197:../../Eblock_lib/E_io_7segments.c **** 	\n   Because 2 digits share the same Digit segments. Need to multiplex between each characters. 
 198:../../Eblock_lib/E_io_7segments.c **** 	\n   Update display on 7 Segments with this algorithm
 199:../../Eblock_lib/E_io_7segments.c **** 	\n		   1 Char show leftmost   (Easy to implement)
 200:../../Eblock_lib/E_io_7segments.c **** 	\n		   2 Chars show 2 digits
 201:../../Eblock_lib/E_io_7segments.c **** 	\n		  > 2 Chars scroll left and re-start when finished
 202:../../Eblock_lib/E_io_7segments.c **** 	\n   To make the refresh process dependent from other tasks. User timer tick to update the display
 203:../../Eblock_lib/E_io_7segments.c **** 	\par Pseudo code
 204:../../Eblock_lib/E_io_7segments.c **** 	\n		Check scrolling time  if reach  move to next characters  start from  begin of buffer 
 205:../../Eblock_lib/E_io_7segments.c **** 	\n		 until end
 206:../../Eblock_lib/E_io_7segments.c **** 	\n      If DOT found  Turn on the dot in previous characters and skip to show next characters
 207:../../Eblock_lib/E_io_7segments.c **** 	\n		Toggle to show each digit using the timer_tick 
 208:../../Eblock_lib/E_io_7segments.c **** 	\note    
 209:../../Eblock_lib/E_io_7segments.c **** 	\bug    <bug to fix>
 210:../../Eblock_lib/E_io_7segments.c **** 
 211:../../Eblock_lib/E_io_7segments.c **** 	\author wichai tossamartvorakul  wichi@geartronics.net
 212:../../Eblock_lib/E_io_7segments.c **** 	\sa	 <see also two name joined by ::>
 213:../../Eblock_lib/E_io_7segments.c **** */     
 214:../../Eblock_lib/E_io_7segments.c **** void io_7segments_update (void)  	
 215:../../Eblock_lib/E_io_7segments.c **** {
 340               	.LM34:
 341               	/* prologue: frame size=0 */
 342 0086 CF93      		push r28
 343 0088 DF93      		push r29
 344               	/* prologue end (size=2) */
 216:../../Eblock_lib/E_io_7segments.c ****  
 217:../../Eblock_lib/E_io_7segments.c ****   static uint8_t fontmap[MAX_CHAR];
 218:../../Eblock_lib/E_io_7segments.c ****   static uint16_t time_shift =  0;   	// Scrolling time interval
 219:../../Eblock_lib/E_io_7segments.c ****   static uint8_t toggle;      			// Toggle display
 220:../../Eblock_lib/E_io_7segments.c **** 
 221:../../Eblock_lib/E_io_7segments.c **** 		  uint8_t index = 0;
 346               	.LM35:
 347 008a 20E0      		ldi r18,lo8(0)
 222:../../Eblock_lib/E_io_7segments.c ****  		time_shift++;
 349               	.LM36:
 350 008c 8091 0000 		lds r24,time_shift.1
 351 0090 9091 0000 		lds r25,(time_shift.1)+1
 352 0094 0196      		adiw r24,1
 353 0096 9093 0000 		sts (time_shift.1)+1,r25
 354 009a 8093 0000 		sts time_shift.1,r24
 223:../../Eblock_lib/E_io_7segments.c **** 		if ((time_shift > INTERVAL) || (g_display_change)) // Interval to shift digits or display buffer 
 356               	.LM37:
 357 009e 8536      		cpi r24,101
 358 00a0 9105      		cpc r25,__zero_reg__
 359 00a2 28F4      		brsh .L14
 361               	.LM38:
 362 00a4 8091 0000 		lds r24,g_display_change
 363 00a8 8823      		tst r24
 364 00aa 09F4      		brne .+2
 365 00ac 3AC0      		rjmp .L13
 366               	.L14:
 224:../../Eblock_lib/E_io_7segments.c **** 		{
 225:../../Eblock_lib/E_io_7segments.c **** 			time_shift = 0;
 368               	.LM39:
 369 00ae 1092 0000 		sts (time_shift.1)+1,__zero_reg__
 370 00b2 1092 0000 		sts time_shift.1,__zero_reg__
 226:../../Eblock_lib/E_io_7segments.c **** 			g_display_change = 0;      // Disable flag until new buffer fetch
 372               	.LM40:
 373 00b6 2093 0000 		sts g_display_change,r18
 227:../../Eblock_lib/E_io_7segments.c **** 		 	index 		= g_display_str[g_start_ptr];
 375               	.LM41:
 376 00ba 8091 0000 		lds r24,g_start_ptr
 377 00be A82F      		mov r26,r24
 378 00c0 BB27      		clr r27
 379 00c2 A050      		subi r26,lo8(-(g_display_str))
 380 00c4 B040      		sbci r27,hi8(-(g_display_str))
 381 00c6 2C91      		ld r18,X
 382               	.LBB2:
 228:../../Eblock_lib/E_io_7segments.c **** 			fontmap[0]  = pgm_read_byte(&font[index]); 	
 384               	.LM42:
 385 00c8 E22F      		mov r30,r18
 386 00ca FF27      		clr r31
 387 00cc E050      		subi r30,lo8(-(font))
 388 00ce F040      		sbci r31,hi8(-(font))
 389               	/* #APP */
 390 00d0 E491      		lpm r30, Z
 391               		
 392               	/* #NOAPP */
 393               	.LBE2:
 394 00d2 E093 0000 		sts fontmap.0,r30
 229:../../Eblock_lib/E_io_7segments.c **** 			index = g_display_str[g_start_ptr+1]; 
 396               	.LM43:
 397 00d6 ED01      		movw r28,r26
 398 00d8 2981      		ldd r18,Y+1
 230:../../Eblock_lib/E_io_7segments.c ****  			if (index == DOT)   // Found dot 
 400               	.LM44:
 401 00da 2E30      		cpi r18,lo8(14)
 402 00dc 59F4      		brne .L15
 231:../../Eblock_lib/E_io_7segments.c **** 			{
 232:../../Eblock_lib/E_io_7segments.c ****  				fontmap[0]  |= _7SEGMENT_DOT;
 404               	.LM45:
 405 00de E068      		ori r30,lo8(-128)
 406 00e0 E093 0000 		sts fontmap.0,r30
 233:../../Eblock_lib/E_io_7segments.c ****  				g_start_ptr++;    // Move to next char 
 408               	.LM46:
 409 00e4 8F5F      		subi r24,lo8(-(1))
 410 00e6 8093 0000 		sts g_start_ptr,r24
 234:../../Eblock_lib/E_io_7segments.c ****   				index = g_display_str[g_start_ptr+1]; 
 412               	.LM47:
 413 00ea E82F      		mov r30,r24
 414 00ec FF27      		clr r31
 415 00ee E050      		subi r30,lo8(-(g_display_str))
 416 00f0 F040      		sbci r31,hi8(-(g_display_str))
 417 00f2 2181      		ldd r18,Z+1
 418               	.L15:
 419               	.LBB3:
 235:../../Eblock_lib/E_io_7segments.c ****  			} 
 236:../../Eblock_lib/E_io_7segments.c **** 			fontmap[1]  = pgm_read_byte(&font[index]);	
 421               	.LM48:
 422 00f4 E22F      		mov r30,r18
 423 00f6 FF27      		clr r31
 424 00f8 E050      		subi r30,lo8(-(font))
 425 00fa F040      		sbci r31,hi8(-(font))
 426               	/* #APP */
 427 00fc 8491      		lpm r24, Z
 428               		
 429               	/* #NOAPP */
 430               	.LBE3:
 431 00fe 8093 0000 		sts fontmap.0+1,r24
 237:../../Eblock_lib/E_io_7segments.c **** 			g_start_ptr++;	
 433               	.LM49:
 434 0102 8091 0000 		lds r24,g_start_ptr
 435 0106 8F5F      		subi r24,lo8(-(1))
 436 0108 8093 0000 		sts g_start_ptr,r24
 238:../../Eblock_lib/E_io_7segments.c **** 		 	if (g_start_ptr > g_display_length - 2) 	// Index start from 0 and show 2characers each time 
 438               	.LM50:
 439 010c 282F      		mov r18,r24
 440 010e 3327      		clr r19
 441 0110 8091 0000 		lds r24,g_display_length
 442 0114 9927      		clr r25
 443 0116 0297      		sbiw r24,2
 444 0118 8217      		cp r24,r18
 445 011a 9307      		cpc r25,r19
 446 011c 14F4      		brge .L13
 239:../../Eblock_lib/E_io_7segments.c **** 				g_start_ptr = 0;					// Reset to start of text again
 448               	.LM51:
 449 011e 1092 0000 		sts g_start_ptr,__zero_reg__
 450               	.L13:
 240:../../Eblock_lib/E_io_7segments.c ****         }
 241:../../Eblock_lib/E_io_7segments.c **** 	
 242:../../Eblock_lib/E_io_7segments.c **** 		if (toggle) 			//  toggle display 2 digits
 452               	.LM52:
 453 0122 8091 0000 		lds r24,toggle.2
 454 0126 8823      		tst r24
 455 0128 41F0      		breq .L17
 243:../../Eblock_lib/E_io_7segments.c **** 		{
 244:../../Eblock_lib/E_io_7segments.c **** 			_7SEGMENT_CHAR   =   fontmap[1];
 457               	.LM53:
 458 012a 8091 0000 		lds r24,fontmap.0+1
 459 012e 88BB      		out 56-0x20,r24
 245:../../Eblock_lib/E_io_7segments.c ****  			_7SEGMENT_DIGIT1_OFF;
 461               	.LM54:
 462 0130 AB9A      		sbi 53-0x20,3
 246:../../Eblock_lib/E_io_7segments.c ****  			_7SEGMENT_DIGIT2_ON;
 464               	.LM55:
 465 0132 AC98      		cbi 53-0x20,4
 247:../../Eblock_lib/E_io_7segments.c **** 			toggle = 0;
 467               	.LM56:
 468 0134 1092 0000 		sts toggle.2,__zero_reg__
 469 0138 08C0      		rjmp .L12
 470               	.L17:
 248:../../Eblock_lib/E_io_7segments.c **** 		}	
 249:../../Eblock_lib/E_io_7segments.c **** 		else // Digit 1 rightmost
 250:../../Eblock_lib/E_io_7segments.c **** 		{
 251:../../Eblock_lib/E_io_7segments.c **** 		    _7SEGMENT_CHAR   =  fontmap[0];
 472               	.LM57:
 473 013a 8091 0000 		lds r24,fontmap.0
 474 013e 88BB      		out 56-0x20,r24
 252:../../Eblock_lib/E_io_7segments.c **** 			_7SEGMENT_DIGIT1_ON;
 476               	.LM58:
 477 0140 AB98      		cbi 53-0x20,3
 253:../../Eblock_lib/E_io_7segments.c ****  			_7SEGMENT_DIGIT2_OFF;
 479               	.LM59:
 480 0142 AC9A      		sbi 53-0x20,4
 254:../../Eblock_lib/E_io_7segments.c **** 			toggle = 1;
 482               	.LM60:
 483 0144 81E0      		ldi r24,lo8(1)
 484 0146 8093 0000 		sts toggle.2,r24
 485               	.L12:
 486               	/* epilogue: frame size=0 */
 487 014a DF91      		pop r29
 488 014c CF91      		pop r28
 489 014e 0895      		ret
 490               	/* epilogue end (size=3) */
 491               	/* function io_7segments_update size 107 (102) */
 505               	.Lscope3:
 506               		.comm g_display_length,1,1
 507               		.comm g_start_ptr,1,1
 508               		.comm g_display_change,1,1
 514               		.text
 516               	Letext:
 517               	/* File "../../Eblock_lib/E_io_7segments.c": code  175 = 0x00af ( 163), prologues   4, epilogues   
DEFINED SYMBOLS
                            *ABS*:00000000 E_io_7segments.c
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:3      *ABS*:0000003f __SREG__
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:4      *ABS*:0000003e __SP_H__
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:5      *ABS*:0000003d __SP_L__
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:6      *ABS*:00000000 __tmp_reg__
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:7      *ABS*:00000001 __zero_reg__
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:89     .progmem.data:00000000 font
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:159    .data:00000000 g_display_str
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:166    .text:00000000 io_7segments_init
                            *COM*:00000001 g_display_length
                            *COM*:00000001 g_start_ptr
                            *COM*:00000001 g_display_change
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:226    .text:0000002a io_7Segments_num
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:241    .text:0000002c io_7segments_write
                             .bss:00000000 fontmap.0
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:332    .bss:00000002 time_shift.1
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:333    .bss:00000004 toggle.2
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:338    .text:00000086 io_7segments_update
C:\DOCUME~1\tos\LOCALS~1\Temp/ccwRaaaa.s:516    .text:00000150 Letext

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
timer_tick
