
timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d4  00000000  00000000  00000094  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000d4  00000168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00800060  000000d4  00000168  2**0
                  ALLOC
  3 .noinit       00000000  00800060  00800060  00000168  2**0
                  CONTENTS
  4 .eeprom       00000000  00810000  00810000  00000168  2**0
                  CONTENTS
  5 .stab         000002dc  00000000  00000000  00000168  2**2
                  CONTENTS, READONLY, DEBUGGING
  6 .stabstr      00000559  00000000  00000000  00000444  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54
   4:	0c 94 45 00 	jmp	0x8a
   8:	0c 94 45 00 	jmp	0x8a
   c:	0c 94 45 00 	jmp	0x8a
  10:	0c 94 45 00 	jmp	0x8a
  14:	0c 94 45 00 	jmp	0x8a
  18:	0c 94 45 00 	jmp	0x8a
  1c:	0c 94 45 00 	jmp	0x8a
  20:	0c 94 45 00 	jmp	0x8a
  24:	0c 94 45 00 	jmp	0x8a
  28:	0c 94 45 00 	jmp	0x8a
  2c:	0c 94 45 00 	jmp	0x8a
  30:	0c 94 45 00 	jmp	0x8a
  34:	0c 94 45 00 	jmp	0x8a
  38:	0c 94 45 00 	jmp	0x8a
  3c:	0c 94 45 00 	jmp	0x8a
  40:	0c 94 45 00 	jmp	0x8a
  44:	0c 94 45 00 	jmp	0x8a
  48:	0c 94 45 00 	jmp	0x8a
  4c:	0c 94 45 00 	jmp	0x8a
  50:	0c 94 45 00 	jmp	0x8a

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ed       	ldi	r30, 0xD4	; 212
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e
  86:	0c 94 63 00 	jmp	0xc6

0000008a <__bad_interrupt>:
  8a:	0c 94 00 00 	jmp	0x0

0000008e <timer_init_mode>:
  
 
 // Set timer mode for  timer 0, 1, 2
uint8_t  timer_init_mode ( uint8_t timer, uint8_t mode)
 {
  8e:	96 2f       	mov	r25, r22
    uint8_t status = 1;
  90:	21 e0       	ldi	r18, 0x01	; 1
	
	switch (timer| mode)
  92:	98 2b       	or	r25, r24
  94:	89 2f       	mov	r24, r25
  96:	99 27       	eor	r25, r25
  98:	85 32       	cpi	r24, 0x25	; 37
  9a:	91 05       	cpc	r25, r1
  9c:	2c f4       	brge	.+10     	; 0xa8
  9e:	81 32       	cpi	r24, 0x21	; 33
  a0:	91 05       	cpc	r25, r1
  a2:	6c f4       	brge	.+26     	; 0xbe
  a4:	41 97       	sbiw	r24, 0x11	; 17
  a6:	08 c0       	rjmp	.+16     	; 0xb8
  a8:	81 33       	cpi	r24, 0x31	; 49
  aa:	91 05       	cpc	r25, r1
  ac:	3c f0       	brlt	.+14     	; 0xbc
  ae:	85 33       	cpi	r24, 0x35	; 53
  b0:	91 05       	cpc	r25, r1
  b2:	2c f0       	brlt	.+10     	; 0xbe
  b4:	81 54       	subi	r24, 0x41	; 65
  b6:	90 40       	sbci	r25, 0x00	; 0
  b8:	04 97       	sbiw	r24, 0x04	; 4
  ba:	08 f0       	brcs	.+2      	; 0xbe
	{
	  case (TIMER0 |TIMER_COUNTER_MODE ):
	  
	  break;
	  
	  case  (TIMER0 |TIMER_CLEAR_TIMER_MODE):
	  
	  break;
	
	  case (TIMER0 |  TIMER_FAST_PWM_MODE):
	  break;
	 
	  case (TIMER0 |  TIMER_PHASE_PWM_MODE):
	  break;
	
	
	 case (TIMER1A |TIMER_COUNTER_MODE ):
	  
	  break;
	  
	  case  (TIMER1A |TIMER_CLEAR_TIMER_MODE):
	  
	  break;
	
	  case (TIMER1A |  TIMER_FAST_PWM_MODE):
	  break;
	 
	  case (TIMER1A |  TIMER_PHASE_PWM_MODE):
	  break;
	  
	   case (TIMER1B |TIMER_COUNTER_MODE ):
	  
	  break;
	  
	  case  (TIMER1B |TIMER_CLEAR_TIMER_MODE):
	  
	  break;
	
	  case (TIMER1B |  TIMER_FAST_PWM_MODE):
	  break;
	 
	  case (TIMER1B |  TIMER_PHASE_PWM_MODE):
	  break;
	   case (TIMER2 |TIMER_COUNTER_MODE ):
	  
	  break;
	  
	  case  (TIMER2 |TIMER_CLEAR_TIMER_MODE):
	  
	  break;
	
	  case (TIMER2 |  TIMER_FAST_PWM_MODE):
	  break;
	 
	  case (TIMER2 |  TIMER_PHASE_PWM_MODE):
	  break;
	  
	  default:
	    status = 0;   // Error set mode  
  bc:	20 e0       	ldi	r18, 0x00	; 0
	 
	}
	
 return status;
 
 }
  be:	82 2f       	mov	r24, r18
  c0:	99 27       	eor	r25, r25
  c2:	08 95       	ret

000000c4 <timer_set_clock>:
 
 void timer_set_clock ( uint8_t timer,uint16_t freq)
 {
  c4:	08 95       	ret

000000c6 <main>:
	 
 
 }
 
 void  main ()
 {
  c6:	cf e5       	ldi	r28, 0x5F	; 95
  c8:	d8 e0       	ldi	r29, 0x08	; 8
  ca:	de bf       	out	0x3e, r29	; 62
  cc:	cd bf       	out	0x3d, r28	; 61
  ce:	0c 94 69 00 	jmp	0xd2

000000d2 <_exit>:
  d2:	ff cf       	rjmp	.-2      	; 0xd2
