ARM COMPILER V2.32a,  RfidReader                                                           18/05/08  02:36:15  PAGE 1   


ARM COMPILER V2.32a, COMPILATION OF MODULE RfidReader
OBJECT MODULE PLACED IN RfidReader.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe RfidReader.c THUMB TABS(4) 

stmt  level    source

    1          #include "LPC213x.h"
    2          #include "RfidReader.h"
    3          
    4          int countBitRFID;
    5          int start;
    6          int datacomplete;
    7          int datanow;
    8          
    9          void irq_EINT2 (void)__irq{
   10   1      
   11   1          start = 1;
   12   1          datanow |= (1<<countBitRFID);
   13   1          countBitRFID = countBitRFID + 1;
   14   1          
   15   1          if(countBitRFID == 26){
   16   2              datacomplete = datanow;
   17   2              datanow = 0;
   18   2              start = 0;
   19   2              countBitRFID = 0;
   20   2          }
   21   1      
   22   1          EXTINT = (1 << 2);
   23   1          VICVectAddr  = 0;
   24   1      }
   25          
   26          void irq_EINT3 (void)__irq{
   27   1          start = 1;
   28   1          datanow |= (0<<countBitRFID);
   29   1          countBitRFID = countBitRFID + 1;
   30   1      
   31   1          if(countBitRFID == 26){
   32   2              datacomplete = datanow;
   33   2              datanow = 0;
   34   2              start = 0;
   35   2              countBitRFID = 0;
   36   2          }
   37   1          
   38   1          EXTINT = (1 << 3);
   39   1          VICVectAddr  = 0;
   40   1      }
   41          
   42          void init_EINT2(void){
   43   1      
   44   1          PINSEL0  |= (3<<14);
   45   1          EXTMODE  |= (1<<2);
   46   1          EXTPOLAR  = (0<<2);
   47   1          VICVectCntl0 = (1<<5) | 16;
   48   1          VICVectAddr0 = (unsigned) irq_EINT2;
   49   1          VICIntEnable |= (1 << 16);
   50   1      
   51   1      }
   52          
   53          void init_EINT3(void){
   54   1      
   55   1          PINSEL1   |= (2<<28);
   56   1          EXTMODE   |= (1<<3);
   57   1          EXTPOLAR  |= (0<<3);
   58   1          VICVectCntl1 = (1<<5) | 17;
   59   1          VICVectAddr1 = (unsigned) irq_EINT3;
ARM COMPILER V2.32a,  RfidReader                                                           18/05/08  02:36:15  PAGE 2   

   60   1          VICIntEnable |= (1 << 17);
   61   1      
   62   1      }
   63          
   64          void init_RFID(void){
   65   1      
   66   1          countBitRFID = 0;
   67   1          start = 0;
   68   1          datacomplete = 0;
   69   1          datanow = 0;
   70   1          init_EINT2();
   71   1          init_EINT3();   
   72   1      }
   73          
   74          int checkcorrectdata(void){
   75   1          int vceven,checkeven,i,checkood;
   76   1          checkeven = 0;
   77   1          checkood  = 0;  
   78   1          for(i=0;i<32;i++){
   79   2             if(i < 13){
   80   3                 vceven = (1<<i)& datacomplete;
   81   3                 if(vceven != 0){
   82   4                    checkeven = checkeven ^ 1;          
   83   4                 }
   84   3             }
   85   2             if(i >= 13){
   86   3                 vceven = (1<<i)& datacomplete;
   87   3                 if(vceven != 0){
   88   4                    checkood = checkood ^ 1;          
   89   4                 }      
   90   3             }
   91   2          }
   92   1          if(checkood == 1 && checkeven == 0){
   93   2             return 1;
   94   2          }       
   95   1          return 0; 
   96   1      }
   97          
   98          int dataRFID(void){
   99   1           return (datacomplete >> 1)&(0xFEFFFFFF);
  100   1      }
  101          
  102          int readRFID(void){
  103   1           if (start == 1){
  104   2               while(1){
  105   3                  if(start == 0){
  106   4              
  107   4                       if(checkcorrectdata() == 1){
  108   5                           return dataRFID();
  109   5                       }
  110   4                     
  111   4                     //  return datacomplete;
  112   4                  
  113   4                       else{
  114   5                           return 0;
  115   5                       }
  116   4                   
  117   4                  }
  118   3               }
  119   2           }
  120   1           datacomplete = 0;
  121   1           return 0;
  122   1      }
ARM COMPILER V2.32a,  RfidReader                                                           18/05/08  02:36:15  PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** PUBLICS:
 PUBLIC         irq_EINT2?A
 PUBLIC         irq_EINT3?A
 PUBLIC         init_EINT2?T
 PUBLIC         init_EINT3?T
 PUBLIC         init_RFID?T
 PUBLIC         checkcorrectdata?T
 PUBLIC         dataRFID?T
 PUBLIC         readRFID?T
 PUBLIC         countBitRFID
 PUBLIC         start
 PUBLIC         datacomplete
 PUBLIC         datanow



*** DATA SEGMENT '?DT0?RfidReader':
 00000000          countBitRFID:
 00000000            DS          4
 00000004          start:
 00000004            DS          4
 00000008          datacomplete:
 00000008            DS          4
 0000000C          datanow:
 0000000C            DS          4



*** CODE SEGMENT '?PR?irq_EINT2?A?RfidReader':
    9: void irq_EINT2 (void)__irq{
 00000000  E92D0007  STMDB       R13!,{R0-R2}
   11:     start = 1;
 00000004  E3A01001  MOV         R1,#0x1
 00000008  E5100000  LDR         R0,=start ; start
 0000000C  E5801000  STR         R1,[R0,#0x0] ; start
   12:     datanow |= (1<<countBitRFID);
 00000010  E5100000  LDR         R0,=countBitRFID ; countBitRFID
 00000014  E5901000  LDR         R1,[R0,#0x0] ; countBitRFID
 00000018  E3A00001  MOV         R0,#0x1
 0000001C  E1A00110  MOV         R0,R0,LSL R1
 00000020  E5102000  LDR         R2,=datanow ; datanow
 00000024  E5922000  LDR         R2,[R2,#0x0] ; datanow
 00000028  E1822000  ORR         R2,R2,R0
 0000002C  E5100000  LDR         R0,=datanow ; datanow
 00000030  E5802000  STR         R2,[R0,#0x0] ; datanow
   13:     countBitRFID = countBitRFID + 1;
 00000034  E2811001  ADD         R1,R1,#0x0001
 00000038  E5100000  LDR         R0,=countBitRFID ; countBitRFID
 0000003C  E5801000  STR         R1,[R0,#0x0] ; countBitRFID
   15:     if(countBitRFID == 26){
 00000040  E5100000  LDR         R0,=countBitRFID ; countBitRFID
 00000044  E5900000  LDR         R0,[R0,#0x0] ; countBitRFID
 00000048  E350001A  CMP         R0,#0x001A
 0000004C  1A00000C  BNE         L_1  ; Targ=0x84
   16:            datacomplete = datanow;
 00000050  E5100000  LDR         R0,=datanow ; datanow
 00000054  E5901000  LDR         R1,[R0,#0x0] ; datanow
 00000058  E5100000  LDR         R0,=datacomplete ; datacomplete
 0000005C  E5801000  STR         R1,[R0,#0x0] ; datacomplete
   17:            datanow = 0;
 00000060  E3A01000  MOV         R1,#0x0
 00000064  E5100000  LDR         R0,=datanow ; datanow
 00000068  E5801000  STR         R1,[R0,#0x0] ; datanow
   18:            start = 0;
 0000006C  E3A01000  MOV         R1,#0x0
 00000070  E5100000  LDR         R0,=start ; start
 00000074  E5801000  STR         R1,[R0,#0x0] ; start
ARM COMPILER V2.32a,  RfidReader                                                           18/05/08  02:36:15  PAGE 4   

   19:            countBitRFID = 0;
 00000078  E3A01000  MOV         R1,#0x0
 0000007C  E5100000  LDR         R0,=countBitRFID ; countBitRFID
 00000080  E5801000  STR         R1,[R0,#0x0] ; countBitRFID
   20:     }
 00000084          L_1:
   22:     EXTINT = (1 << 2);
 00000084  E3A01004  MOV         R1,#0x4
 00000088  E5100000  LDR         R0,=0xE01FC140
 0000008C  E5C01000  STRB        R1,[R0,#0x0]
   23:     VICVectAddr  = 0;
 00000090  E3A01000  MOV         R1,#0x0
 00000094  E5100000  LDR         R0,=0xFFFFF030
 00000098  E5801000  STR         R1,[R0,#0x0]
   24: }
 0000009C  E8BD0007  LDMIA       R13!,{R0-R2}
 000000A0  E25EF004  SUBS        R15,R14,#0x0004
 000000A4          ENDP ; 'irq_EINT2?A'


*** CODE SEGMENT '?PR?irq_EINT3?A?RfidReader':
   26: void irq_EINT3 (void)__irq{
 00000000  E92D0003  STMDB       R13!,{R0-R1}
   27:     start = 1;
 00000004  E3A01001  MOV         R1,#0x1
 00000008  E5100000  LDR         R0,=start ; start
 0000000C  E5801000  STR         R1,[R0,#0x0] ; start
   28:     datanow |= (0<<countBitRFID);
 00000010  E5100000  LDR         R0,=datanow ; datanow
 00000014  E5901000  LDR         R1,[R0,#0x0] ; datanow
 00000018  E5100000  LDR         R0,=datanow ; datanow
 0000001C  E5801000  STR         R1,[R0,#0x0] ; datanow
   29:     countBitRFID = countBitRFID + 1;
 00000020  E5100000  LDR         R0,=countBitRFID ; countBitRFID
 00000024  E5901000  LDR         R1,[R0,#0x0] ; countBitRFID
 00000028  E2811001  ADD         R1,R1,#0x0001
 0000002C  E5100000  LDR         R0,=countBitRFID ; countBitRFID
 00000030  E5801000  STR         R1,[R0,#0x0] ; countBitRFID
   31:     if(countBitRFID == 26){
 00000034  E5100000  LDR         R0,=countBitRFID ; countBitRFID
 00000038  E5900000  LDR         R0,[R0,#0x0] ; countBitRFID
 0000003C  E350001A  CMP         R0,#0x001A
 00000040  1A00000C  BNE         L_2  ; Targ=0x78
   32:           datacomplete = datanow;
 00000044  E5100000  LDR         R0,=datanow ; datanow
 00000048  E5901000  LDR         R1,[R0,#0x0] ; datanow
 0000004C  E5100000  LDR         R0,=datacomplete ; datacomplete
 00000050  E5801000  STR         R1,[R0,#0x0] ; datacomplete
   33:           datanow = 0;
 00000054  E3A01000  MOV         R1,#0x0
 00000058  E5100000  LDR         R0,=datanow ; datanow
 0000005C  E5801000  STR         R1,[R0,#0x0] ; datanow
   34:           start = 0;
 00000060  E3A01000  MOV         R1,#0x0
 00000064  E5100000  LDR         R0,=start ; start
 00000068  E5801000  STR         R1,[R0,#0x0] ; start
   35:           countBitRFID = 0;
 0000006C  E3A01000  MOV         R1,#0x0
 00000070  E5100000  LDR         R0,=countBitRFID ; countBitRFID
 00000074  E5801000  STR         R1,[R0,#0x0] ; countBitRFID
   36:     }
 00000078          L_2:
   38:     EXTINT = (1 << 3);
 00000078  E3A01008  MOV         R1,#0x8
 0000007C  E5100000  LDR         R0,=0xE01FC140
 00000080  E5C01000  STRB        R1,[R0,#0x0]
   39:     VICVectAddr  = 0;
 00000084  E3A01000  MOV         R1,#0x0
ARM COMPILER V2.32a,  RfidReader                                                           18/05/08  02:36:15  PAGE 5   

 00000088  E5100000  LDR         R0,=0xFFFFF030
 0000008C  E5801000  STR         R1,[R0,#0x0]
   40: }
 00000090  E8BD0003  LDMIA       R13!,{R0-R1}
 00000094  E25EF004  SUBS        R15,R14,#0x0004
 00000098          ENDP ; 'irq_EINT3?A'


*** CODE SEGMENT '?PR?init_EINT2?T?RfidReader':
   44:      PINSEL0  |= (3<<14);
 00000000  4800      LDR         R2,=0xC000
 00000002  4800      LDR         R0,=0xE002C000
 00000004  6801      LDR         R1,[R0,#0x0]
 00000006  4311      ORR         R1,R2
 00000008  6001      STR         R1,[R0,#0x0]
   45:     EXTMODE  |= (1<<2);
 0000000A  2204      MOV         R2,#0x4
 0000000C  4800      LDR         R0,=0xE01FC148
 0000000E  7801      LDRB        R1,[R0,#0x0]
 00000010  4311      ORR         R1,R2
 00000012  7001      STRB        R1,[R0,#0x0]
   46:     EXTPOLAR  = (0<<2);
 00000014  2100      MOV         R1,#0x0
 00000016  4800      LDR         R0,=0xE01FC14C
 00000018  7001      STRB        R1,[R0,#0x0]
   47:     VICVectCntl0 = (1<<5) | 16;
 0000001A  2130      MOV         R1,#0x30
 0000001C  4800      LDR         R0,=0xFFFFF200
 0000001E  6001      STR         R1,[R0,#0x0]
   48:     VICVectAddr0 = (unsigned) irq_EINT2;
 00000020  4900      LDR         R1,=irq_EINT2?A ; irq_EINT2?A
 00000022  4800      LDR         R0,=0xFFFFF100
 00000024  6001      STR         R1,[R0,#0x0]
   49:     VICIntEnable |= (1 << 16);
 00000026  4800      LDR         R2,=0x10000
 00000028  4800      LDR         R0,=0xFFFFF010
 0000002A  6801      LDR         R1,[R0,#0x0]
 0000002C  4311      ORR         R1,R2
 0000002E  6001      STR         R1,[R0,#0x0]
   51: }
 00000030  4770      BX          R14
 00000032          ENDP ; 'init_EINT2?T'


*** CODE SEGMENT '?PR?init_EINT3?T?RfidReader':
   55:      PINSEL1   |= (2<<28);
 00000000  4800      LDR         R2,=0x20000000
 00000002  4800      LDR         R0,=0xE002C004
 00000004  6801      LDR         R1,[R0,#0x0]
 00000006  4311      ORR         R1,R2
 00000008  6001      STR         R1,[R0,#0x0]
   56:     EXTMODE   |= (1<<3);
 0000000A  2208      MOV         R2,#0x8
 0000000C  4800      LDR         R0,=0xE01FC148
 0000000E  7801      LDRB        R1,[R0,#0x0]
 00000010  4311      ORR         R1,R2
 00000012  7001      STRB        R1,[R0,#0x0]
   57:     EXTPOLAR  |= (0<<3);
 00000014  4800      LDR         R0,=0xE01FC14C
 00000016  7801      LDRB        R1,[R0,#0x0]
 00000018  7001      STRB        R1,[R0,#0x0]
   58:     VICVectCntl1 = (1<<5) | 17;
 0000001A  2131      MOV         R1,#0x31
 0000001C  4800      LDR         R0,=0xFFFFF204
 0000001E  6001      STR         R1,[R0,#0x0]
   59:     VICVectAddr1 = (unsigned) irq_EINT3;
 00000020  4900      LDR         R1,=irq_EINT3?A ; irq_EINT3?A
 00000022  4800      LDR         R0,=0xFFFFF104
 00000024  6001      STR         R1,[R0,#0x0]
   60:     VICIntEnable |= (1 << 17);
ARM COMPILER V2.32a,  RfidReader                                                           18/05/08  02:36:15  PAGE 6   

 00000026  4800      LDR         R2,=0x20000
 00000028  4800      LDR         R0,=0xFFFFF010
 0000002A  6801      LDR         R1,[R0,#0x0]
 0000002C  4311      ORR         R1,R2
 0000002E  6001      STR         R1,[R0,#0x0]
   62: }
 00000030  4770      BX          R14
 00000032          ENDP ; 'init_EINT3?T'


*** CODE SEGMENT '?PR?init_RFID?T?RfidReader':
   64: void init_RFID(void){
 00000000  B500      PUSH        {LR}
   66:     countBitRFID = 0;
 00000002  2100      MOV         R1,#0x0
 00000004  4800      LDR         R0,=countBitRFID ; countBitRFID
 00000006  6001      STR         R1,[R0,#0x0] ; countBitRFID
   67:     start = 0;
 00000008  2100      MOV         R1,#0x0
 0000000A  4800      LDR         R0,=start ; start
 0000000C  6001      STR         R1,[R0,#0x0] ; start
   68:     datacomplete = 0;
 0000000E  2100      MOV         R1,#0x0
 00000010  4800      LDR         R0,=datacomplete ; datacomplete
 00000012  6001      STR         R1,[R0,#0x0] ; datacomplete
   69:     datanow = 0;
 00000014  2100      MOV         R1,#0x0
 00000016  4800      LDR         R0,=datanow ; datanow
 00000018  6001      STR         R1,[R0,#0x0] ; datanow
   70:     init_EINT2();
 0000001A  F7FF      BL          init_EINT2?T  ; T=0x0001  (1)
 0000001C  FFF1      BL          init_EINT2?T  ; T=0x0001  (2)
   71:     init_EINT3();   
 0000001E  F7FF      BL          init_EINT3?T  ; T=0x0001  (1)
 00000020  FFEF      BL          init_EINT3?T  ; T=0x0001  (2)
   72: }
 00000022  BC08      POP         {R3}
 00000024  4718      BX          R3
 00000026          ENDP ; 'init_RFID?T'


*** CODE SEGMENT '?PR?checkcorrectdata?T?RfidReader':
   74: int checkcorrectdata(void){
 00000000  B410      PUSH        {R4}
 00000002  ---- Variable 'vceven' assigned to Register 'R1' ----
 00000002            ; SCOPE-START
   76:     checkeven = 0;
 00000002  2200      MOV         R2,#0x0
 00000004  ---- Variable 'checkeven' assigned to Register 'R2' ----
   77:     checkood  = 0;  
 00000004  2300      MOV         R3,#0x0
 00000006  ---- Variable 'checkood' assigned to Register 'R3' ----
   78:     for(i=0;i<32;i++){
 00000006  2000      MOV         R0,#0x0
 00000008  ---- Variable 'i' assigned to Register 'R0' ----
 00000008          L_6:
   79:        if(i < 13){
 00000008  1C04      MOV         R4,R0 ; i
 0000000A  2C0D      CMP         R4,#0xD ; i
 0000000C  DA0A      BGE         L_8  ; T=0x00000024
   80:            vceven = (1<<i)& datacomplete;
 0000000E  1C04      MOV         R4,R0 ; i
 00000010  2101      MOV         R1,#0x1
 00000012  40A1      LSL         R1,R4
 00000014  4800      LDR         R4,=datacomplete ; datacomplete
 00000016  6824      LDR         R4,[R4,#0x0] ; datacomplete
 00000018  4021      AND         R1,R4
   81:            if(vceven != 0){
 0000001A  1C0C      MOV         R4,R1 ; vceven
 0000001C  2C00      CMP         R4,#0x0 ; vceven
ARM COMPILER V2.32a,  RfidReader                                                           18/05/08  02:36:15  PAGE 7   

 0000001E  D001      BEQ         L_8  ; T=0x00000024
   82:               checkeven = checkeven ^ 1;          
 00000020  2401      MOV         R4,#0x1
 00000022  4062      EOR         R2,R4
   84:        }
 00000024          L_8:
   85:         if(i >= 13){
 00000024  1C04      MOV         R4,R0 ; i
 00000026  2C0D      CMP         R4,#0xD ; i
 00000028  DB0A      BLT         L_3  ; T=0x00000040
   86:            vceven = (1<<i)& datacomplete;
 0000002A  1C04      MOV         R4,R0 ; i
 0000002C  2101      MOV         R1,#0x1
 0000002E  40A1      LSL         R1,R4
 00000030  4800      LDR         R4,=datacomplete ; datacomplete
 00000032  6824      LDR         R4,[R4,#0x0] ; datacomplete
 00000034  4021      AND         R1,R4
   87:            if(vceven != 0){
 00000036  1C0C      MOV         R4,R1 ; vceven
 00000038  2C00      CMP         R4,#0x0 ; vceven
 0000003A  D001      BEQ         L_3  ; T=0x00000040
   88:               checkood = checkood ^ 1;          
 0000003C  2401      MOV         R4,#0x1
 0000003E  4063      EOR         R3,R4
   91:     }
 00000040          L_3:
 00000040  3001      ADD         R0,#0x1
 00000042  1C04      MOV         R4,R0 ; i
 00000044  2C20      CMP         R4,#0x20 ; i
 00000046  DBDF      BLT         L_6  ; T=0x00000008
   92:     if(checkood == 1 && checkeven == 0){
 00000048  1C18      MOV         R0,R3 ; checkood
 0000004A  2801      CMP         R0,#0x1 ; checkood
 0000004C  D104      BNE         L_12  ; T=0x00000058
 0000004E  1C10      MOV         R0,R2 ; checkeven
 00000050  2800      CMP         R0,#0x0 ; checkeven
 00000052  D101      BNE         L_12  ; T=0x00000058
   93:        return 1;
 00000054  2001      MOV         R0,#0x1
 00000056  E000      B           L_13  ; T=0x0000005A
   94:     }       
 00000058          L_12:
   95:     return 0; 
 00000058  2000      MOV         R0,#0x0
 0000005A            ; SCOPE-END
   96: }
 0000005A          L_13:
 0000005A  BC10      POP         {R4}
 0000005C  4770      BX          R14
 0000005E          ENDP ; 'checkcorrectdata?T'


*** CODE SEGMENT '?PR?dataRFID?T?RfidReader':
   99:      return (datacomplete >> 1)&(0xFEFFFFFF);
 00000000  4800      LDR         R0,=datacomplete ; datacomplete
 00000002  6800      LDR         R0,[R0,#0x0] ; datacomplete
 00000004  1040      ASR         R0,R0,#0x1
 00000006  4800      LDR         R1,=0x1000000
 00000008  4388      BIC         R0,R1
  100: }
 0000000A  4770      BX          R14
 0000000C          ENDP ; 'dataRFID?T'


*** CODE SEGMENT '?PR?readRFID?T?RfidReader':
  102: int readRFID(void){
 00000000  B500      PUSH        {LR}
  103:      if (start == 1){
 00000002  4800      LDR         R0,=start ; start
 00000004  6800      LDR         R0,[R0,#0x0] ; start
ARM COMPILER V2.32a,  RfidReader                                                           18/05/08  02:36:15  PAGE 8   

 00000006  2801      CMP         R0,#0x1
 00000008  D10C      BNE         L_15  ; T=0x00000024
  104:          while(1){
 0000000A          L_18:
  105:             if(start == 0){
 0000000A  4800      LDR         R0,=start ; start
 0000000C  6800      LDR         R0,[R0,#0x0] ; start
 0000000E  2800      CMP         R0,#0x0
 00000010  D1FB      BNE         L_18  ; T=0x0000000A
  107:                  if(checkcorrectdata() == 1){
 00000012  F7FF      BL          checkcorrectdata?T  ; T=0x0001  (1)
 00000014  FFF5      BL          checkcorrectdata?T  ; T=0x0001  (2)
 00000016  2801      CMP         R0,#0x1 ; checkcorrectdata?T
 00000018  D102      BNE         L_21  ; T=0x00000020
  108:                      return dataRFID();
 0000001A  F7FF      BL          dataRFID?T  ; T=0x0001  (1)
 0000001C  FFF1      BL          dataRFID?T  ; T=0x0001  (2)
 0000001E  E005      B           L_22  ; T=0x0000002C
  109:                  }
 00000020          L_21:
  114:                      return 0;
 00000020  2000      MOV         R0,#0x0
 00000022  E003      B           L_22  ; T=0x0000002C
  119:      }
 00000024          L_15:
  120:      datacomplete = 0;
 00000024  2100      MOV         R1,#0x0
 00000026  4800      LDR         R0,=datacomplete ; datacomplete
 00000028  6001      STR         R1,[R0,#0x0] ; datacomplete
  121:      return 0;
 0000002A  2000      MOV         R0,#0x0
 0000002C          L_22:
 0000002C  BC08      POP         {R3}
 0000002E  4718      BX          R3
 00000030          ENDP ; 'readRFID?T'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =        16
  const size           =    ------
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
